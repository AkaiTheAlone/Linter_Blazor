@inherits LayoutComponentBase
@inject NavigationManager navigations

<style>
    .centralizado {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
    }

    .centralizarSemEspaco {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 16px;
        height: 100vh;
    }

    .linterTexto {
        font-family: 'Script MT', cursive
    }

    .sair {
        outline: 1px;
    }
</style>

<FluentTooltipProvider @rendermode=InteractiveServer />
<FluentMenuProvider />
<FluentDialogProvider @rendermode="InteractiveServer" />
<FluentToastProvider @rendermode="InteractiveServer"
                     RemoveToastsOnNavigation="false"
                     MaxToastCount="10"
                     ShowCloseButton="true"
                     Timeout="500" />
<FluentLayout>
    <FluentHeader Height="70">
        <h1 class="linterTexto">
            Linter
        </h1>

        <LogoutBotao>

        </LogoutBotao>
        <div style="margin-left:auto">
            <img src="/recursos/imagens/marca sem tag-05.png" height="60" width="100" />
        </div>


    </FluentHeader>

    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">

        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content">
                @Body
            </div>

        </FluentBodyContent>
    </FluentStack>

    <AuthorizeView>
        <NotAuthorized>

        </NotAuthorized>
        <Authorized>

        </Authorized>
    </AuthorizeView>
</FluentLayout>


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
@code {

    private bool expanded = true;
    private string? currentUrl;

    protected override void OnInitialized()
    {
        navigations.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = navigations.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        navigations.LocationChanged -= OnLocationChanged;
    }
}
